// <auto-generated />
using System;
using BCKFreightTMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BCKFreightTMS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210405131211_VATReasons")]
    partial class VATReasons
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BCKFreightTMS.Data.Models.ActionNotFinishedReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("ActionNotFinishedReasons");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.ActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("ActionTypes");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Postcode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StreetLine")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UsernameChangeLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.BankDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BankIban")
                        .HasColumnType("varchar(22)");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Cargo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Cubature")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Lenght")
                        .HasColumnType("real");

                    b.Property<int?>("LoadingBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleRequirements")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int?>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightGross")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("WeightNet")
                        .HasColumnType("decimal(10,2)");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LoadingBodyId");

                    b.HasIndex("TypeId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CargoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CargoTypes");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CarrierOrder", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferenceNum")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OrderId");

                    b.ToTable("CarrierOrders");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ComunicatorsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TaxCountryId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxCurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyAddressId")
                        .IsUnique()
                        .HasFilter("[CompanyAddressId] IS NOT NULL");

                    b.HasIndex("ComunicatorsId")
                        .IsUnique()
                        .HasFilter("[ComunicatorsId] IS NOT NULL");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("TaxCountryId");

                    b.HasIndex("TaxCurrencyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CompanyAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MOLFirstName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("MOLLastName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CompanyAddresses");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CompanyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("CompanyContacts");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Comunicators", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Email1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email2")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile1")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Mobile2")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone1")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Phone2")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Comunicators");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Documentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AOA")
                        .HasColumnType("bit");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BillOfGoods")
                        .HasColumnType("bit");

                    b.Property<bool>("BillOfLading")
                        .HasColumnType("bit");

                    b.Property<bool>("CMR")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeliveryNote")
                        .HasColumnType("bit");

                    b.Property<bool>("Invoice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("ListItems")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderToId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PackingList")
                        .HasColumnType("bit");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int?>("RecievedDocumentationId")
                        .HasColumnType("int");

                    b.Property<bool>("WeighingNote")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RecievedDocumentationId");

                    b.ToTable("Documentations");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.DriverOrder", b =>
                {
                    b.Property<string>("DriverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("DriverId", "OrderId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OrderId");

                    b.ToTable("DriverOrders");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.InvoiceIn", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DueDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VATReasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankDetailsId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("StatusId");

                    b.HasIndex("VATReasonId");

                    b.ToTable("InvoiceIn");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.InvoiceOut", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DueDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VATReasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankDetailsId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("StatusId");

                    b.HasIndex("VATReasonId");

                    b.ToTable("InvoiceOut");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("InvoiceStatuses");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DueDaysFrom")
                        .HasColumnType("int");

                    b.Property<int>("DueDaysTo")
                        .HasColumnType("int");

                    b.Property<string>("FailReason")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderFromId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OrderFromId")
                        .IsUnique()
                        .HasFilter("[OrderFromId] IS NOT NULL");

                    b.HasIndex("StatusId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NoNotes")
                        .HasColumnType("bit");

                    b.Property<int?>("NotFinishedReasonId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OrderToId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NotFinishedReasonId");

                    b.HasIndex("OrderToId");

                    b.HasIndex("TypeId");

                    b.ToTable("OrderActions");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderFrom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContactId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("TypeId");

                    b.ToTable("OrderFroms");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderTo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CarrierOrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyInId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyOutId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentationId")
                        .HasColumnType("int");

                    b.Property<string>("FailReason")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("InvoiceInId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvoiceOutId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PriceNetIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceNetOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId")
                        .IsUnique()
                        .HasFilter("[CargoId] IS NOT NULL");

                    b.HasIndex("CarrierOrderId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ContactId");

                    b.HasIndex("CurrencyInId");

                    b.HasIndex("CurrencyOutId");

                    b.HasIndex("DocumentationId")
                        .IsUnique()
                        .HasFilter("[DocumentationId] IS NOT NULL");

                    b.HasIndex("InvoiceInId");

                    b.HasIndex("InvoiceOutId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OrderId");

                    b.HasIndex("TypeId");

                    b.HasIndex("VehicleId");

                    b.ToTable("OrderTos");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("OrderTypes");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ComunicatorsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ComunicatorsId")
                        .IsUnique()
                        .HasFilter("[ComunicatorsId] IS NOT NULL");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RoleId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.PersonRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("PersonRoles");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.TaxCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("TaxCountries");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.VATReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("VATReasons");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Vehicle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DriverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoadingBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TrailerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DriverId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LoadingBodyId");

                    b.HasIndex("TrailerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.VehicleLoadingBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("VehicleLoadingBodies");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.ApplicationUser", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.BankDetails", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Company", "Company")
                        .WithMany("BankDetails")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Cargo", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.VehicleLoadingBody", "LoadingBody")
                        .WithMany("Cargos")
                        .HasForeignKey("LoadingBodyId");

                    b.HasOne("BCKFreightTMS.Data.Models.CargoType", "Type")
                        .WithMany("Cargos")
                        .HasForeignKey("TypeId");

                    b.HasOne("BCKFreightTMS.Data.Models.VehicleType", "VehicleType")
                        .WithMany("Cargos")
                        .HasForeignKey("VehicleTypeId");

                    b.Navigation("LoadingBody");

                    b.Navigation("Type");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CarrierOrder", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("BCKFreightTMS.Data.Models.Order", "Order")
                        .WithMany("CarrierOrders")
                        .HasForeignKey("OrderId");

                    b.Navigation("Company");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Company", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.CompanyAddress", "Address")
                        .WithOne("Company")
                        .HasForeignKey("BCKFreightTMS.Data.Models.Company", "CompanyAddressId");

                    b.HasOne("BCKFreightTMS.Data.Models.Comunicators", "Comunicators")
                        .WithOne("Company")
                        .HasForeignKey("BCKFreightTMS.Data.Models.Company", "ComunicatorsId");

                    b.HasOne("BCKFreightTMS.Data.Models.TaxCountry", "TaxCountry")
                        .WithMany("Companies")
                        .HasForeignKey("TaxCountryId");

                    b.HasOne("BCKFreightTMS.Data.Models.Currency", "TaxCurrency")
                        .WithMany("Companies")
                        .HasForeignKey("TaxCurrencyId");

                    b.Navigation("Address");

                    b.Navigation("Comunicators");

                    b.Navigation("TaxCountry");

                    b.Navigation("TaxCurrency");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CompanyAddress", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Address", "Address")
                        .WithMany("CompanyAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CompanyContact", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Address", "Address")
                        .WithMany("CompanyContacts")
                        .HasForeignKey("AddressId");

                    b.HasOne("BCKFreightTMS.Data.Models.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Address");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Documentation", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Documentation", "RecievedDocumentation")
                        .WithMany()
                        .HasForeignKey("RecievedDocumentationId");

                    b.Navigation("RecievedDocumentation");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.DriverOrder", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Person", "Driver")
                        .WithMany("DriverOrders")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BCKFreightTMS.Data.Models.OrderTo", "Order")
                        .WithMany("Drivers")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.InvoiceIn", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.BankDetails", "BankDetails")
                        .WithMany()
                        .HasForeignKey("BankDetailsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BCKFreightTMS.Data.Models.InvoiceStatus", "Status")
                        .WithMany("InvoiceIns")
                        .HasForeignKey("StatusId");

                    b.HasOne("BCKFreightTMS.Data.Models.VATReason", "VATReason")
                        .WithMany("InvoiceIns")
                        .HasForeignKey("VATReasonId");

                    b.Navigation("BankDetails");

                    b.Navigation("Status");

                    b.Navigation("VATReason");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.InvoiceOut", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.BankDetails", "BankDetails")
                        .WithMany()
                        .HasForeignKey("BankDetailsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BCKFreightTMS.Data.Models.InvoiceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("BCKFreightTMS.Data.Models.VATReason", "VATReason")
                        .WithMany("InvoiceOuts")
                        .HasForeignKey("VATReasonId");

                    b.Navigation("BankDetails");

                    b.Navigation("Status");

                    b.Navigation("VATReason");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Order", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.ApplicationUser", "Creator")
                        .WithMany("Orders")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BCKFreightTMS.Data.Models.OrderFrom", "OrderFrom")
                        .WithOne("Order")
                        .HasForeignKey("BCKFreightTMS.Data.Models.Order", "OrderFromId");

                    b.HasOne("BCKFreightTMS.Data.Models.OrderStatus", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId");

                    b.Navigation("Creator");

                    b.Navigation("OrderFrom");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderAction", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Address", "Address")
                        .WithMany("OrderActions")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BCKFreightTMS.Data.Models.ActionNotFinishedReason", "NotFinishedReason")
                        .WithMany("OrderActions")
                        .HasForeignKey("NotFinishedReasonId");

                    b.HasOne("BCKFreightTMS.Data.Models.OrderTo", "OrderTo")
                        .WithMany("OrderActions")
                        .HasForeignKey("OrderToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BCKFreightTMS.Data.Models.ActionType", "Type")
                        .WithMany("OrderActions")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("NotFinishedReason");

                    b.Navigation("OrderTo");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderFrom", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Company", "Company")
                        .WithMany("OrderFroms")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BCKFreightTMS.Data.Models.Person", "Contact")
                        .WithMany("ContactOrdersFrom")
                        .HasForeignKey("ContactId");

                    b.HasOne("BCKFreightTMS.Data.Models.OrderType", "Type")
                        .WithMany("OrdersFrom")
                        .HasForeignKey("TypeId");

                    b.Navigation("Company");

                    b.Navigation("Contact");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderTo", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Cargo", "Cargo")
                        .WithOne("OrderTo")
                        .HasForeignKey("BCKFreightTMS.Data.Models.OrderTo", "CargoId");

                    b.HasOne("BCKFreightTMS.Data.Models.CarrierOrder", "CarrierOrder")
                        .WithMany("OrderTos")
                        .HasForeignKey("CarrierOrderId");

                    b.HasOne("BCKFreightTMS.Data.Models.Company", null)
                        .WithMany("OrderTos")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BCKFreightTMS.Data.Models.Person", "Contact")
                        .WithMany("ContactOrdersTo")
                        .HasForeignKey("ContactId");

                    b.HasOne("BCKFreightTMS.Data.Models.Currency", "CurrencyIn")
                        .WithMany("OrderTosIn")
                        .HasForeignKey("CurrencyInId");

                    b.HasOne("BCKFreightTMS.Data.Models.Currency", "CurrencyOut")
                        .WithMany("OrderTosOut")
                        .HasForeignKey("CurrencyOutId");

                    b.HasOne("BCKFreightTMS.Data.Models.Documentation", "Documentation")
                        .WithOne("Order")
                        .HasForeignKey("BCKFreightTMS.Data.Models.OrderTo", "DocumentationId");

                    b.HasOne("BCKFreightTMS.Data.Models.InvoiceIn", "InvoiceIn")
                        .WithMany("OrderTos")
                        .HasForeignKey("InvoiceInId");

                    b.HasOne("BCKFreightTMS.Data.Models.InvoiceOut", "InvoiceOut")
                        .WithMany("OrderTos")
                        .HasForeignKey("InvoiceOutId");

                    b.HasOne("BCKFreightTMS.Data.Models.Order", "Order")
                        .WithMany("OrderTos")
                        .HasForeignKey("OrderId");

                    b.HasOne("BCKFreightTMS.Data.Models.OrderType", "Type")
                        .WithMany("OrdersTo")
                        .HasForeignKey("TypeId");

                    b.HasOne("BCKFreightTMS.Data.Models.Vehicle", "Vehicle")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleId");

                    b.Navigation("Cargo");

                    b.Navigation("CarrierOrder");

                    b.Navigation("Contact");

                    b.Navigation("CurrencyIn");

                    b.Navigation("CurrencyOut");

                    b.Navigation("Documentation");

                    b.Navigation("InvoiceIn");

                    b.Navigation("InvoiceOut");

                    b.Navigation("Order");

                    b.Navigation("Type");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Person", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Company", "Company")
                        .WithMany("People")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BCKFreightTMS.Data.Models.Comunicators", "Comunicators")
                        .WithOne("Person")
                        .HasForeignKey("BCKFreightTMS.Data.Models.Person", "ComunicatorsId");

                    b.HasOne("BCKFreightTMS.Data.Models.PersonRole", "Role")
                        .WithMany("People")
                        .HasForeignKey("RoleId");

                    b.Navigation("Company");

                    b.Navigation("Comunicators");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Vehicle", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("BCKFreightTMS.Data.Models.Person", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId");

                    b.HasOne("BCKFreightTMS.Data.Models.VehicleLoadingBody", "LoadingBody")
                        .WithMany("Vehicles")
                        .HasForeignKey("LoadingBodyId");

                    b.HasOne("BCKFreightTMS.Data.Models.Vehicle", "Trailer")
                        .WithMany()
                        .HasForeignKey("TrailerId");

                    b.HasOne("BCKFreightTMS.Data.Models.VehicleType", "Type")
                        .WithMany("Vehicles")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Driver");

                    b.Navigation("LoadingBody");

                    b.Navigation("Trailer");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.ApplicationUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BCKFreightTMS.Data.Models.ApplicationUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BCKFreightTMS.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.ActionNotFinishedReason", b =>
                {
                    b.Navigation("OrderActions");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.ActionType", b =>
                {
                    b.Navigation("OrderActions");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Address", b =>
                {
                    b.Navigation("CompanyAddresses");

                    b.Navigation("CompanyContacts");

                    b.Navigation("OrderActions");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Orders");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Cargo", b =>
                {
                    b.Navigation("OrderTo");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CargoType", b =>
                {
                    b.Navigation("Cargos");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CarrierOrder", b =>
                {
                    b.Navigation("OrderTos");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Company", b =>
                {
                    b.Navigation("BankDetails");

                    b.Navigation("Contacts");

                    b.Navigation("OrderFroms");

                    b.Navigation("OrderTos");

                    b.Navigation("People");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.CompanyAddress", b =>
                {
                    b.Navigation("Company");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Comunicators", b =>
                {
                    b.Navigation("Company");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Currency", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("OrderTosIn");

                    b.Navigation("OrderTosOut");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Documentation", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.InvoiceIn", b =>
                {
                    b.Navigation("OrderTos");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.InvoiceOut", b =>
                {
                    b.Navigation("OrderTos");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.InvoiceStatus", b =>
                {
                    b.Navigation("InvoiceIns");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Order", b =>
                {
                    b.Navigation("CarrierOrders");

                    b.Navigation("OrderTos");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderFrom", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderTo", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("OrderActions");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.OrderType", b =>
                {
                    b.Navigation("OrdersFrom");

                    b.Navigation("OrdersTo");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Person", b =>
                {
                    b.Navigation("ContactOrdersFrom");

                    b.Navigation("ContactOrdersTo");

                    b.Navigation("DriverOrders");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.PersonRole", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.TaxCountry", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.VATReason", b =>
                {
                    b.Navigation("InvoiceIns");

                    b.Navigation("InvoiceOuts");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.Vehicle", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.VehicleLoadingBody", b =>
                {
                    b.Navigation("Cargos");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("BCKFreightTMS.Data.Models.VehicleType", b =>
                {
                    b.Navigation("Cargos");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
